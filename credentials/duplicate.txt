public void addToCart() throws Exception
	{
		String chosen,chosen1;
		int select,select1;
		list1.clear();
		FileReader fr=new FileReader("D:/Courses/zoho incubation/Java/Main Application/credentials/data/places.txt");    
		BufferedReader br=new BufferedReader(fr);  
		while((s=br.readLine())!=null)
		{
			list1.add(s);
		}
		br.close();
		fr.close();
		
		while(true)
		{
			
			int n2;
			System.out.println("THE PLACES WHERE OUR SERVICES AVAILABLE ARE");
			System.out.println("1.CONTINUE");
			System.out.println("2.GO BACK");
			n2=sc.nextInt();
			sc.nextLine();
			if(n2==2)
			{
				break;
			}
			System.out.println("THE PLACES WHERE OUR SERVICES AVAILABLE ARE");
			for(int i=0;i<list1.size();i++)
			{
				System.out.println((i+1)+"."+list1.get(i));
			}
			System.out.println();
			System.out.println("ENTER THE PLACE NUMBER YOU LIKE TO SELECT");
			select=sc.nextInt();
			if(flag==0)
			{
				first=select;
				flag=1;
			}
			if(first==select)
			{
				;
			}
			else
			{ 
				for(End adding:purchase)
				{
					FileInputStream in2=new FileInputStream("D:/Courses/zoho incubation/Java/Main Application/credentials/data/"+adding.place+"/"+adding.hotel+".txt");				//deserialize
					ObjectInputStream ois2=null;
					try{
					ois2=new ObjectInputStream(in2);  
					}
					catch(EOFException e)
					{
						;
					}	 
					Items s3;
					while(in2.available()!=0)
					{
						s3=(Items)ois2.readObject();
						adding1.add(s3);  
					}
					in2.close();
					for(Items l1:adding1)
					{
						if(l1.name.equals(adding.name))
						{
							l1.quantity=l1.quantity+adding.quantity;
						}
					}
					FileOutputStream file2=new FileOutputStream("D:/Courses/zoho incubation/Java/Main Application/credentials/data/"+adding.place+"/"+adding.hotel+".txt");		//Serialization
					ObjectOutputStream out2=new ObjectOutputStream(file2);
					for (Items list3: adding1)
					{
						out2.writeObject(list3);	
					}
					out2.close();
					file2.close();
				}
				first=select;
				flag=0;
				purchase.clear();
				listOfItems.clear();
				
			}
				
			sc.nextLine();
			if(select>=list1.size()+1)
			{
				System.out.println("SELECT A GIVEN PLACE NUMBER:");
				int n1;
				System.out.println("1.CONTINUE");
				System.out.println("2.GO BACK");
				n1=sc.nextInt();
				sc.nextLine();
				if(n1==2)
				{
					break;
				}
				continue;
			}
			chosen=list1.get(select-1);
			FileInputStream in=new FileInputStream("D:/Courses/zoho incubation/Java/Main Application/credentials/data/"+chosen+"/hotels.txt");				//deserialize
			ObjectInputStream ois=null;
			
			try{
			ois=new ObjectInputStream(in);  
			}
			catch(EOFException e)
			{
				;
			} 
			Hotels s1;
			
			while(in.available()!=0)
			{
				s1=(Hotels)ois.readObject();
				listOfHotels.add(s1);  
			}
			in.close();
			
			while(true)
			{
				System.out.println("THE LIST OF HOTELS AVAILABLE IN THIS PLACE ARE:");
				
				System.out.println("1.CONTINUE");
				System.out.println("2.GO BACK");
				n2=sc.nextInt();
				sc.nextLine();
				if(n2==2)
				{
					break;
				}
				System.out.println("THE LIST OF HOTELS AVAILABLE IN THIS PLACE ARE:");
				System.out.printf("%10s%15s%16s%10s\n","HOTEL ID","HOTEL NAME","VEG/NON VEG","STATUS"); 
				System.out.format("--------------------------------------------------------------------------------------------------------------------\n");  
				int count=1;
				for (Hotels list: listOfHotels)
				{
					System.out.format("%10d%15s%16s%10s\n" ,count++,list.hotelName,list.type,list.status);  
				}
				System.out.println();
				System.out.println("ENTER THE HOTEL NUMBER YOU LIKE TO SELECT");
				select1=sc.nextInt();
				sc.nextLine();
				if(select1>=listOfHotels.size()+1)
				{
					System.out.println("SELECT ONE OF THE GIVEN HOTEL NUMBERS:");
					int n1;
					System.out.println("1.CONTINUE");
					System.out.println("2.GO BACK");
					n1=sc.nextInt();
					sc.nextLine();
					if(n1==2)
					{
						break;
					}
					continue;
				}
				chosen1=listOfHotels.get(select1-1).hotelName;
				
				
				while(true){
					FileInputStream in1=new FileInputStream("D:/Courses/zoho incubation/Java/Main Application/credentials/data/"+chosen+"/"+chosen1+".txt");				//deserialize
				ObjectInputStream ois1=null;
				try{
				ois=new ObjectInputStream(in1);  
				}
				catch(EOFException e)
				{
					;
				} 
				Items s2;
				listOfItems.clear();
				while(in1.available()!=0)
				{
					s2=(Items)ois.readObject();
					listOfItems.add(s2);  
				}
				in1.close();
					int count2=1;
				System.out.printf("%20s%20s%20s%20s","DISH ID","DISH NAME","QUANTITY","PRICE\n"); 
				System.out.format("--------------------------------------------------------------------------------------------------------------------\n");
				for (Items list1: listOfItems)
				{
					System.out.format("%20d%20s%20d%20d\n" ,count2++,list1.name,list1.quantity,list1.price);  
				}
				System.out.println("1.CONTINUE");
				System.out.println("2.GO BACK");
				n=sc.nextInt();
				sc.nextLine();
				if(n==2)
				{
					break;
				}
				System.out.println("ENTER THE DISH NAME YOU LIKE TO ADD IN THE CART:");
				String cart;
				cart=sc.nextLine().toLowerCase();
				for(Items l:listOfItems)
				{
					if(l.name.equals(cart))
					{
						int getter;
						
						while(true)
						{
							System.out.println("ENTER THE QUANTITY:");
							getter=sc.nextInt();
							sc.nextLine();
							if(l.quantity<getter)
							{
								System.out.println("YOUR REQUEST IS HIGHER THAN THE STOCK....THE AVAILABLE QUANTITY IS "+l.quantity);
							}
							else
							{
								l.quantity=l.quantity-getter;
								End end=new End(l.name,getter,l.price*getter,chosen,chosen1);
								
								purchase.add(end);
								FileOutputStream file=new FileOutputStream("D:/Courses/zoho incubation/Java/Main Application/credentials/data/"+chosen+"/"+chosen1+".txt");		//Serialization
								ObjectOutputStream out=new ObjectOutputStream(file);
								for (Items list3: listOfItems)
								{
									out.writeObject(list3);	
								}
								out.close();
								file.close();
								
								//purchase.get((purchase.size()-1)).quantity=getter;                         //getting recently added index reference and changing the value
								break;
							}
						}
						break;
					}
				}
				listOfItems.clear();
				
				}				
			}
			listOfHotels.clear();	
			listOfItems.clear();
		}
		
	}